      SUBROUTINE SVBKSB(UMATRX,WVECTR,VMATRX,MSIZE,NSIZE,MPHYS,NPHYS,
     +                  BVECTR,XVECTR)

C     *************************************************************************
C
C     SVBKSB
C     ======
C
C     AUTHOR
C     ------
C     R.S.CANT  --  CAMBRIDGE UNIVERSITY ENGINEERING DEPARTMENT
C
C     CHANGE RECORD
C     -------------
C     28-OCT-2012:  CREATED
C
C     DESCRIPTION
C     -----------
C     SOLVES A.X = B USING THE SINGULAR VALUE DECOMPOSITION OF THE MATRIX
C
C     IN THE FORM A = U.W.V^T
C     
C     INPUT:
C       MATRIX UMATRX(MSIZE,NSIZE) OF PHYSICAL DIMENSIONS MPHYS,NPHYS
C       MATRIX VMATRX(NSIZE,NSIZE) OF PHYSICAL DIMENSIONS NPHYS,NPHYS
C       VECTOR WMATRX(NSIZE) OF PHYSICAL DIMENSION NPHYS
C       VECTOR BMATRX(NSIZE) OF PHYSICAL DIMENSION NPHYS
C
C     OUTPUT:
C       VECTOR XVECTR(NSIZE) OF PHYSICAL DIMENSION NPHYS
C
C     BASED ON NUMERICAL RECIPES SUBROUTINE SVDCMP
C
C     *************************************************************************


C     PARAMETERS
C     ==========
      DOUBLE PRECISION ZERO
      PARAMETER(ZERO = 0.0D0)
      INTEGER NMAX
      PARAMETER(NMAX = 500)



C     ARGUMENTS
C     =========
      DOUBLE PRECISION UMATRX(MPHYS,NPHYS)
      DOUBLE PRECISION VMATRX(NPHYS,NPHYS)
      DOUBLE PRECISION WVECTR(NPHYS),XVECTR(NPHYS)
      DOUBLE PRECISION BVECTR(MPHYS)
      INTEGER MSIZE,MPHYS,NSIZE,NPHYS


C     LOCAL DATA
C     ==========
      DOUBLE PRECISION TMP(NMAX)
      DOUBLE PRECISION SVAR
      INTEGER IC,JC,JJ


C     BEGIN
C     =====
C     CALCULATE U^T.B
      DO JC = 1,NSIZE
        SVAR = ZERO
C       NONZERO RESULT ONLY IF W(J) IS NONZERO
        IF(WVECTR(JC).NE.ZERO)THEN
          DO IC = 1,MSIZE
            SVAR = SVAR + UMATRX(IC,JC)*BVECTR(IC)
          ENDDO
C         THIS IS THE DIVIDE BY W(J) .
          SVAR = SVAR/WVECTR(JC)
        ENDIF
        TMP(JC) = SVAR
      ENDDO

C     MATRIX MULTIPLY BY V TO GET THE ANSWER
      DO JC = 1,NSIZE
        SVAR = ZERO
        DO JJ = 1,NSIZE
          SVAR = SVAR + VMATRX(JC,JJ)*TMP(JJ)
        ENDDO
        XVECTR(JC) = SVAR
      ENDDO


      RETURN
      END
