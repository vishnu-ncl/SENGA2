      SUBROUTINE SVDFIT(XPOINT,YPOINT,SIGDEV,NPOINT,
     +                  ACOEFF,MCOEFF,
     +                  UMATRX,VMATRX,WVECTR,MPHYS,NPHYS,
     +                  CHISQR)

C     *************************************************************************
C
C     SVDFIT
C     ======
C
C     AUTHOR
C     ------
C     R.S.CANT  --  CAMBRIDGE UNIVERSITY ENGINEERING DEPARTMENT
C
C     CHANGE RECORD
C     -------------
C     28-OCT-2012:  CREATED
C      
C     DESCRIPTION
C     -----------
C     DOES A GENERAL LINEAR LEAST-SQUARES FIT
C     TO THE DATASET SPECIFIED BY THE NPOINT VALUES (XPOINT,YPOINT)
C     USING THE MCOEFF BASIS FUNCTIONS
C     SPECIFIED BY THE EXTERNAL SUBROUTINE BFUNCT(XPOINT,ABFUNC,MCOEFF).
C     USES SINGULAR VALUE DECOMPOSITION
C     RETURNS THE MCOEFF COEFFICIENTS ACOEFF
C             THE GOODNESS-OF-FIT PARAMETER CHISQR
C             THE SVD OF THE DESIGN MATRIX IN UMATRX,VMATRX,WVECTR
C     NOTE: MUST HAVE MPHYS >= NPOINT AND NPHYS >= MCOEFF
C
C     BASED ON NUMERICAL RECIPES SUBROUTINE SVDFIT
C
C     *************************************************************************


C     PARAMETERS
C     ==========
      DOUBLE PRECISION ZERO,ONE
      PARAMETER(ZERO = 0.0D0, ONE = 1.0D0)

      DOUBLE PRECISION TOLSVD
      PARAMETER(TOLSVD = 1.0D-5)

      INTEGER MCOFMX,NPTMAX
      PARAMETER(MCOFMX = 10, NPTMAX = 1000)


C     ARGUMENTS
C     =========
      DOUBLE PRECISION UMATRX(MPHYS,NPHYS)
      DOUBLE PRECISION VMATRX(NPHYS,NPHYS)
      DOUBLE PRECISION WVECTR(NPHYS)
      DOUBLE PRECISION XPOINT(NPOINT),YPOINT(NPOINT),SIGDEV(NPOINT)
      DOUBLE PRECISION ACOEFF(MCOEFF)
      DOUBLE PRECISION CHISQR
      INTEGER NPOINT,MCOEFF,MPHYS,NPHYS


C     LOCAL DATA
C     ==========
      DOUBLE PRECISION BVECTR(NPTMAX)
      DOUBLE PRECISION ABFUNC(MCOFMX)
      DOUBLE PRECISION CHISUM,THRESH,FORNOW,WVCMAX
      INTEGER IC,JC


C     BEGIN
C     =====

C     ACCUMULATE COEFFICIENTS OF THE FITTING MATRIX
      DO IC = 1,NPOINT
        CALL BFUNCT(XPOINT(IC),ABFUNC,MCOEFF)
        FORNOW = ONE/SIGDEV(IC)
        DO JC = 1,MCOEFF
          UMATRX(IC,JC) = ABFUNC(JC)*FORNOW
        ENDDO
        BVECTR(IC) = YPOINT(IC)*FORNOW
      ENDDO

C     SINGULAR VALUE DECOMPOSITION
      CALL SVDCMP(UMATRX,NPOINT,MCOEFF,MPHYS,NPHYS,WVECTR,VMATRX)

C     EDIT THE SINGULAR VALUES, GIVEN TOLSVD
      WVCMAX = ZERO
      DO JC = 1,MCOEFF
        IF(WVECTR(JC).GT.WVCMAX)WVCMAX = WVECTR(JC)
      ENDDO
      THRESH = TOLSVD*WVCMAX
      DO JC = 1,MCOEFF
        IF(WVECTR(JC).LT.THRESH)WVECTR(JC) = ZERO
      ENDDO
      CALL SVBKSB(UMATRX,WVECTR,VMATRX,NPOINT,MCOEFF,MPHYS,NPHYS,
     +            BVECTR,ACOEFF)

C     EVALUATE CHI-SQUARE
      CHISQR  =  ZERO
      DO IC = 1,NPOINT
        CALL BFUNCT(XPOINT(IC),ABFUNC,MCOEFF)
        CHISUM = ZERO
        DO JC = 1,MCOEFF
          CHISUM = CHISUM + ACOEFF(JC)*ABFUNC(JC)
        ENDDO
        CHISQR  =  CHISQR + ((YPOINT(IC)-CHISUM)/SIGDEV(IC))**2
      ENDDO


      RETURN
      END
