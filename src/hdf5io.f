      MODULE HDF5IO
#ifdef HDF5
        USE hdf5
        INCLUDE 'mpif.h'
        CHARACTER*60 H5_FILENAME(2)
#endif
        CONTAINS
C
C     HDF5 DMPI FILES ORGANISATION
C
C     THE  DMPI FILES CONSISTS OF 7 DATASETS:
C     - '/CONSTANTS' (2 DIM ARRAY)  WHICH CONTAINS THE VALUE OF
C       NXNODE, NYNODE, NZNODE, NSPEC FOR EACH MPI RANK
C     -'/DRUN': (4 DIM ARRAY), THE FIRST DIMENSION IS THE MPI RANK,
C        THE THREE OTHERS ARE NXNODE,NYNODE,NZNODE.
C     -'/URUN': IDEM
C     -'/VRUN': IDEM
C     -'/WRUN': IDEM
C     -'/ERUN': IDEM
C     -'/YRUN': (5 DIM ARRAY), THE FIRST DIMENSION IS THE MPI RANK,
C        THE FOUR OTHERS ARE NXNODE,NYNODE,NZNODE,NSPEC.
C
C     THE SUBROUTINES TO MANAGE THE DMPI FILES ARE:
C       - CREATE_H5DUMP_FILES
C       - READ_H5DUMP_FILES
C       - WRITE_H5_DUMPFILE
C

      SUBROUTINE HDF5_INIT()
C     INITIALISE THE HDF5 LIBRARY.
C     IT IS MANDATORY TO CALL IT BEFORE CALLING ANY HDF5 SUBROUTINES.
#ifdef HDF5
          INTEGER ERR
          CALL H5OPEN_F(ERR)
          IF(ERR/=0)THEN
            WRITE(*,*)"ERROR WHEN INITIALIZING HDF5 LIBRARY"
            CALL MPI_ABORT(MPI_COMM_WORLD,-1,ERR)
          ENDIF
#endif
        END SUBROUTINE

        SUBROUTINE HDF5_CLOSE()
C       CLOSE THE HDF5 LIBRARY, TO CALL BEFORE THE END OF THE PROGRAM
C       NO CALL TO HDF5 SUBROUTINES CAN BE MADE AFTER.
#ifdef HDF5
          INTEGER ERR
          CALL H5CLOSE_F(ERR)
          IF(ERR/=0)THEN
            WRITE(*,*)"ERROR WHEN CLOSING HDF5 LIBRARY"
            CALL MPI_ABORT(MPI_COMM_WORLD,-1,ERR)
          ENDIF
#endif
        END SUBROUTINE

        SUBROUTINE CREATE_H5DUMP_FILES()
#ifdef HDF5
        INCLUDE 'com_senga2.h'
          INTEGER ERR, I
          LOGICAL EXISTS
          INTEGER(HID_T) SPACE_ID, DSET_ID,PLIST_ID
          INTEGER(HSIZE_T) DIMS(5)
          INTEGER(HID_T) DUMPFILE_ID(2)
          CHARACTER*6 PNPROC
          CHARACTER*5 DSET_NAME

          WRITE(PNPROC,'(I6.6)')IPROC
          CALL H5PCREATE_F(H5P_FILE_ACCESS_F, PLIST_ID, ERR)
          CALL H5PSET_FAPL_MPIO_F(PLIST_ID, MPI_COMM_WORLD,
     +                            MPI_INFO_NULL, ERR)
          DO I=1,2
            INQUIRE(FILE=H5_FILENAME(I),EXIST=EXISTS)
            IF(.NOT.EXISTS)THEN
              CALL H5FCREATE_F(H5_FILENAME(I), H5F_ACC_TRUNC_F,
     +                         DUMPFILE_ID(I),ERR, ACCESS_PRP=PLIST_ID)
              IF(ERR/=0)THEN
                WRITE(*,*)"ERROR WHEN CALLING H5FCREATE_F INSIDE
     +                     CREATE_H5DUMP_FILES"
                CALL MPI_ABORT(MPI_COMM_WORLD,-1,ERR)
              ENDIF

              DIMS(1)=NPROC
              DIMS(2)=4
              CALL H5SCREATE_SIMPLE_F(2, DIMS, SPACE_ID, ERR)
              CALL H5DCREATE_F(DUMPFILE_ID(I),"/CONSTANTS",
     +                         H5T_NATIVE_INTEGER,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              CALL H5SCLOSE_F(SPACE_ID,ERR)

              !IN ORDER TO SIMPLIFY THE HDF5 CODE, EACH RANK WILL USE
              !AN ARRAY OF THE SAME SIZE, SO WE USE THE BIGGEST VALUE OF
              !NXNODE, NYNODE AND NZNODE
              DIMS(1)=NPROC
              DIMS(2)=NXNODE
              DIMS(3)=NYNODE
              DIMS(4)=NZNODE
              DIMS(5)=NSPEC
              CALL MPI_ALLREDUCE(MPI_IN_PLACE, DIMS, 5, MPI_INTEGER,
     +                           MPI_MAX, MPI_COMM_WORLD, ERR)

              CALL H5SCREATE_SIMPLE_F(4, DIMS, SPACE_ID, ERR)
              DSET_NAME = "/DRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/URUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/VRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/WRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/ERUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              CALL H5SCLOSE_F(SPACE_ID,ERR)

              CALL H5SCREATE_SIMPLE_F(5,DIMS,SPACE_ID,ERR)
              DSET_NAME = "/YRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              CALL H5SCLOSE_F(SPACE_ID,ERR)
              CALL H5FCLOSE_F(DUMPFILE_ID(I),ERR)
            ENDIF
          ENDDO
          CALL H5PCLOSE_F(PLIST_ID, ERR)
#endif
        END SUBROUTINE

C UMOD DATA I/O START
        SUBROUTINE CREATE_H5DATA_FILES()
#ifdef HDF5
        INCLUDE 'com_senga2.h'
          INTEGER ERR, I
          LOGICAL EXISTS
          INTEGER(HID_T) SPACE_ID, DSET_ID,PLIST_ID
          INTEGER(HSIZE_T) DIMS(5)
          INTEGER(HID_T) DUMPFILE_ID(2)
          CHARACTER*6 PNPROC
          CHARACTER*5 DSET_NAME

          WRITE(PNPROC,'(I6.6)')IPROC
          CALL H5PCREATE_F(H5P_FILE_ACCESS_F, PLIST_ID, ERR)
          CALL H5PSET_FAPL_MPIO_F(PLIST_ID, MPI_COMM_WORLD,
     +                            MPI_INFO_NULL, ERR)
          DO I=1,2
            INQUIRE(FILE=H5_FILENAME(I),EXIST=EXISTS)
            IF(.NOT.EXISTS)THEN
              CALL H5FCREATE_F(H5_FILENAME(I), H5F_ACC_TRUNC_F,
     +                         DUMPFILE_ID(I),ERR, ACCESS_PRP=PLIST_ID)
              IF(ERR/=0)THEN
                WRITE(*,*)"ERROR WHEN CALLING H5FCREATE_F INSIDE
     +                     CREATE_H5DATA_FILE"
                CALL MPI_ABORT(MPI_COMM_WORLD,-1,ERR)
              ENDIF

              DIMS(1)=NPROC
              DIMS(2)=4
              CALL H5SCREATE_SIMPLE_F(2, DIMS, SPACE_ID, ERR)
              CALL H5DCREATE_F(DUMPFILE_ID(I),"/CONSTANTS",
     +                         H5T_NATIVE_INTEGER,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              CALL H5SCLOSE_F(SPACE_ID,ERR)

              !IN ORDER TO SIMPLIFY THE HDF5 CODE, EACH RANK WILL USE
              !AN ARRAY OF THE SAME SIZE, SO WE USE THE BIGGEST VALUE OF
              !NXNODE, NYNODE AND NZNODE
              DIMS(1)=NPROC
              DIMS(2)=NXNODE
              DIMS(3)=NYNODE
              DIMS(4)=NZNODE
              DIMS(5)=NSPEC
              CALL MPI_ALLREDUCE(MPI_IN_PLACE, DIMS, 5, MPI_INTEGER,
     +                           MPI_MAX, MPI_COMM_WORLD, ERR)

              CALL H5SCREATE_SIMPLE_F(4, DIMS, SPACE_ID, ERR)
              DSET_NAME = "/DRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/URUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/VRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/WRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              DSET_NAME = "/ERUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              CALL H5SCLOSE_F(SPACE_ID,ERR)

              CALL H5SCREATE_SIMPLE_F(5,DIMS,SPACE_ID,ERR)
              DSET_NAME = "/YRUN"
              CALL H5DCREATE_F(DUMPFILE_ID(I),DSET_NAME,
     +                         H5T_NATIVE_DOUBLE,SPACE_ID,DSET_ID,ERR)
              CALL H5DCLOSE_F(DSET_ID,ERR)
              CALL H5SCLOSE_F(SPACE_ID,ERR)
              CALL H5FCLOSE_F(DUMPFILE_ID(I),ERR)
            ENDIF
          ENDDO
          CALL H5PCLOSE_F(PLIST_ID, ERR)
#endif
        END SUBROUTINE
C UMOD DATA I/O END

        SUBROUTINE READ_H5DUMP_FILES()
#ifdef HDF5
          INCLUDE 'com_senga2.h'
          INTEGER ERR, CONSTS(4)
          INTEGER(HID_T) DSET_ID,FILE_ID,PLIST_ID,SPACE_ID,MEMSPACE_ID
          INTEGER(HSIZE_T) COUNT(5), DIMS1(1), DIMS3(3), DIMS4(4)
          INTEGER(HSIZE_T) OFFSET(5)
          CHARACTER*6 PNPROC
          CHARACTER*5 DSET_NAME

          CALL H5PCREATE_F(H5P_FILE_ACCESS_F, PLIST_ID, ERR)
          CALL H5PSET_FAPL_MPIO_F(PLIST_ID, MPI_COMM_WORLD,
     +                            MPI_INFO_NULL, ERR)

          WRITE(PNPROC,'(I6.6)')IPROC
          CALL H5FOPEN_F(H5_FILENAME(IDFLAG+1),H5F_ACC_RDONLY_F,FILE_ID,
     +                   ERR, ACCESS_PRP=PLIST_ID)
          IF(ERR/=0)THEN
            WRITE(*,*)"COULDN'T OPEN FILE:",H5_FILENAME(IDFLAG+1)
            CALL MPI_ABORT(MPI_COMM_WORLD,-1,ERR)
          ENDIF
          CALL H5PCLOSE_F(PLIST_ID, ERR)

          CALL H5PCREATE_F(H5P_DATASET_XFER_F, PLIST_ID, ERR)
          CALL H5PSET_DXPL_MPIO_F(PLIST_ID, H5FD_MPIO_COLLECTIVE_F, ERR)

          OFFSET(1)=IPROC
          OFFSET(2)=0
          COUNT(1)=1
          COUNT(2)=4

          CALL H5SCREATE_SIMPLE_F(2, COUNT, MEMSPACE_ID, ERR)
          DIMS1 = (/4/)
          CALL H5DOPEN_F(FILE_ID, "/CONSTANTS", DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DREAD_F(DSET_ID, H5T_NATIVE_INTEGER, CONSTS, DIMS1,ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5SCLOSE_F(SPACE_ID, ERR)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(MEMSPACE_ID, ERR)

          IF(NXNODE.NE.CONSTS(1))WRITE(6,*)'DUMP INPUT SIZE ERROR: X'
          IF(NYNODE.NE.CONSTS(2))WRITE(6,*)'DUMP INPUT SIZE ERROR: Y'
          IF(NZNODE.NE.CONSTS(3))WRITE(6,*)'DUMP INPUT SIZE ERROR: Z'
          IF(NSPEC.NE.CONSTS(4))WRITE(6,*)
     +                          'DUMP INPUT SIZE ERROR: SPECIES'

          OFFSET(1)=IPROC
          OFFSET(2)=0
          OFFSET(3)=0
          OFFSET(4)=0
          COUNT(1)=1
          COUNT(2)=NXNODE
          COUNT(3)=NYNODE
          COUNT(4)=NZNODE

          CALL H5SCREATE_SIMPLE_F(4, COUNT, MEMSPACE_ID, ERR)

          DIMS3 = (/NXNODE,NYNODE,NZNODE/)

          DSET_NAME = "/DRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DREAD_F(DSET_ID, H5T_NATIVE_DOUBLE, DRUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/URUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DREAD_F(DSET_ID, H5T_NATIVE_DOUBLE, URUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/VRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DREAD_F(DSET_ID, H5T_NATIVE_DOUBLE, VRUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/WRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DREAD_F(DSET_ID, H5T_NATIVE_DOUBLE, WRUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/ERUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DREAD_F(DSET_ID, H5T_NATIVE_DOUBLE, ERUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          OFFSET(5)=0
          COUNT(5)=NSPEC
          CALL H5SCLOSE_F(MEMSPACE_ID, ERR)
          CALL H5SCREATE_SIMPLE_F(5, COUNT, MEMSPACE_ID, ERR)
          DIMS4 = (/NXNODE,NYNODE,NZNODE,NSPEC/)

          DSET_NAME = "/YRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DREAD_F(DSET_ID, H5T_NATIVE_DOUBLE, YRUN, DIMS4, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          CALL H5PCLOSE_F(PLIST_ID, ERR)
          CALL H5SCLOSE_F(MEMSPACE_ID, ERR)
          CALL H5FCLOSE_F(FILE_ID,ERR)
#endif
        END SUBROUTINE

        SUBROUTINE WRITE_H5_DUMPFILE()
#ifdef HDF5
          INCLUDE 'com_senga2.h'
          INTEGER ERR, CONSTS(4)
          INTEGER(HID_T) DSET_ID,FILE_ID,PLIST_ID,SPACE_ID,MEMSPACE_ID
          INTEGER(HSIZE_T) COUNT(5), DIMS1(1), DIMS3(3), DIMS4(4)
          INTEGER(HSIZE_T) OFFSET(5)
          CHARACTER*6 PNPROC
          CHARACTER*5 DSET_NAME

          CALL H5PCREATE_F(H5P_FILE_ACCESS_F, PLIST_ID, ERR)
          CALL H5PSET_FAPL_MPIO_F(PLIST_ID, MPI_COMM_WORLD,
     +      MPI_INFO_NULL, ERR)

          WRITE(PNPROC,'(I6.6)')IPROC
          CALL H5FOPEN_F(H5_FILENAME(IDFLAG+1),H5F_ACC_RDWR_F,FILE_ID,
     +                   ERR,ACCESS_PRP=PLIST_ID)
          IF(ERR/=0)THEN
            WRITE(*,*)"COULDN'T OPEN FILE:",H5_FILENAME(IDFLAG+1)
            CALL MPI_ABORT(MPI_COMM_WORLD,-1,ERR)
          ENDIF
          CALL H5PCLOSE_F(PLIST_ID, ERR)

          CALL H5PCREATE_F(H5P_DATASET_XFER_F, PLIST_ID, ERR)
          CALL H5PSET_DXPL_MPIO_F(PLIST_ID, H5FD_MPIO_COLLECTIVE_F, ERR)

          !WRITE NXNODES, NYNODES, NZNODES, NSPEC VALUES
          DIMS1 = (/4/)
          OFFSET(1)=IPROC
          OFFSET(2)=0
          COUNT(1)=1
          COUNT(2)=4
          CONSTS(1) = NXNODE
          CONSTS(2) = NYNODE
          CONSTS(3) = NZNODE
          CONSTS(4) = NSPEC

          CALL H5SCREATE_SIMPLE_F(2, COUNT, MEMSPACE_ID, ERR)
          CALL H5DOPEN_F(FILE_ID, "/CONSTANTS", DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DWRITE_F(DSET_ID, H5T_NATIVE_INTEGER, CONSTS,DIMS1,ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          !WRITE DRUN, URUN, VRUN, WRUN, ERUN, YRUN VALUES
          OFFSET(1)=IPROC
          OFFSET(2)=0
          OFFSET(3)=0
          OFFSET(4)=0
          COUNT(1)=1
          COUNT(2)=NXNODE
          COUNT(3)=NYNODE
          COUNT(4)=NZNODE

          CALL H5SCREATE_SIMPLE_F(4, COUNT, MEMSPACE_ID, ERR)

          DIMS3 = (/NXNODE,NYNODE,NZNODE/)

          DSET_NAME = "/DRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DWRITE_F(DSET_ID, H5T_NATIVE_DOUBLE, DRUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/URUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DWRITE_F(DSET_ID, H5T_NATIVE_DOUBLE, URUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/VRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DWRITE_F(DSET_ID, H5T_NATIVE_DOUBLE, VRUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/WRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DWRITE_F(DSET_ID, H5T_NATIVE_DOUBLE, WRUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          DSET_NAME = "/ERUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DWRITE_F(DSET_ID, H5T_NATIVE_DOUBLE, ERUN, DIMS3, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          OFFSET(5)=0
          COUNT(5)=NSPEC
          CALL H5SCLOSE_F(MEMSPACE_ID, ERR)
          CALL H5SCREATE_SIMPLE_F(5, COUNT, MEMSPACE_ID, ERR)
          DIMS4 = (/NXNODE,NYNODE,NZNODE,NSPEC/)

          DSET_NAME = "/YRUN"
          CALL H5DOPEN_F(FILE_ID, DSET_NAME, DSET_ID, ERR)
          CALL H5DGET_SPACE_F(DSET_ID, SPACE_ID, ERR)
          CALL H5SSELECT_HYPERSLAB_F(SPACE_ID, H5S_SELECT_SET_F, OFFSET,
     +                               COUNT, ERR)
          CALL H5DWRITE_F(DSET_ID, H5T_NATIVE_DOUBLE, YRUN, DIMS4, ERR,
     +                 FILE_SPACE_ID=SPACE_ID, MEM_SPACE_ID=MEMSPACE_ID,
     +                 XFER_PRP = PLIST_ID)
          CALL CHECK_ERR(ERR, __LINE__)
          CALL H5DCLOSE_F(DSET_ID, ERR)
          CALL H5SCLOSE_F(SPACE_ID, ERR)

          CALL H5PCLOSE_F(PLIST_ID, ERR)
          CALL H5SCLOSE_F(MEMSPACE_ID, ERR)
          CALL H5FCLOSE_F(FILE_ID,ERR)
#endif
        END SUBROUTINE

        SUBROUTINE CHECK_ERR(ERR, LINE)
          INTEGER ERR, LINE
          IF (ERR /=0)THEN
            WRITE(*,*)"ERROR ON LINE", LINE
            CALL MPI_ABORT(MPI_COMM_WORLD, -1, ERR)
          ENDIF
        END SUBROUTINE
      END MODULE HDF5IO
