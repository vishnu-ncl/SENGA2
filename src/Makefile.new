
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.common
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.mpi
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.cuda
USE_HDF5=1
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.hdf5

OTHER_FILES = com_espect.F90 com_senga2.F90 rhsvel.F90 dfinit.F90 dfbydy.F90 dfbydz.F90 pardom.F90 indata.F90 \
	dtinit.F90 parfer.F90 tempin.F90 flinit.F90 output.F90 d2fdy2.F90 d2fdz2.F90 \
	d2fdxy.F90 d2fdxz.F90 d2fdyz.F90 dfmstr.F90 exhalo.F90 inhalo.F90 exhals.F90 inhals.F90 \
	zeroxl.F90 zeroxr.F90 zeroyl.F90 zeroyr.F90 zerozl.F90 zerozr.F90 \
	adaptt.F90 ardums.F90 bcdtxl.F90 bcdtxr.F90 bcdtyl.F90 bcdtyr.F90 \
	bcdtzl.F90 bcdtzr.F90 bctixl.F90 bcttxl.F90 bcttxr.F90 bcttyl.F90 \
	bcttyr.F90 bcttzl.F90 bcttzr.F90 ardump.F90 bcutxl.F90 bcutxr.F90 bcutyl.F90 bcutyr.F90 \
	bcutzl.F90 bcutzr.F90 bcytxl.F90 bcytxr.F90 bcytyl.F90 bcytyr.F90 \
	bcytzr.F90 buftxl.F90 chkarr.F90 chkary.F90 cxhalo.F90 cxhals.F90 \
	cyhalo.F90 cyhals.F90 czhalo.F90 czhals.F90 erfunc.F90 espect.F90 \
	espksq.F90 espovk.F90 finish.F90 bcytzl.F90 dfbydx.F90 d2fdx2.F90 \
	rhscal.F90 lincom.F90 fincom.F90 contin.F90 espini.F90 integf.F90 \
	temper.F90 chrate.F90 chemin.F90 diffin.F90 radcal.F90 radcin.F90 \
	bcinit.F90 bounds.F90 bountt.F90 boundt.F90 turbin.F90 turbft.F90 fftsym.F90 fftf3d.F90 \
	flamin.F90 fftixl.F90

OPS_FILES = com_ops_senga2.F90 senga2.F90 ops_data_init.F90 print_dats.F90

ifeq ($(OPS_COMPILER),intel)
APP_FLAGS = -mcmodel=large -fp-model precise -fp-model source -no-fma -fimf-arch-consistency=true -fimf-precision=high
endif

ifeq ($(OPS_COMPILER),pgi)
APP_FLAGS = -Kieee -Mnofpapprox -mcmodel=medium -Ktrap=unf -Mnofprelaxed -m64 -pc 64
endif

APP_LIBS = fftlib/fftlib.a rndlib/rndlib.a parlib/parlib.a -lm

TARGETS = seq

APP = senga2
MAIN_SRC = senga2

##############################################################################
ifndef OPS_GENERATED_SUFFIX
OPS_GENERATED_SUFFIX=_ops
endif

ifeq ($(strip $(OPS_GENERATED)),)
OPS_GENERATED=$(join $(addsuffix $(OPS_GENERATED_SUFFIX), $(basename $(OPS_FILES))), $(suffix $(OPS_FILES)))
endif

OPS_FILES_GEN=$(OTHER_FILES) $(OPS_GENERATED)

.generated: $(HEADERS) $(OPS_FILES) $(OPS_INSTALL_PATH)/../ops_translator/fortran/*.py
	$(OPS_INSTALL_PATH)/../ops_translator/fortran/ops_fortran.py $(OPS_FILES)
	rm -f .generated
	touch .generated

ifndef TARGETS
TARGETS = seq
endif

APP_TARGETS = $(addprefix $(APP)_, $(TARGETS))

all: $(APP_TARGETS)

SEQ_KERNELS = $(wildcard MPI/*.F90)
CUDA_KERNELS = $(wildcard CUDA/*.CUF)

MODULE_FILES = com_espect.F90 com_senga2.F90 com_ops_senga2_ops.F90
OTHER_FILES := $(filter-out $(MODULE_FILES), $(OTHER_FILES))
OPS_GENERATED := $(filter-out $(MODULE_FILES), $(OPS_GENERATED))

#=========================================================================================================================

SEQ_OBJ = $(MODULE_FILES:.F90=_seq.o) $(OTHER_FILES:.F90=_seq.o) $(SEQ_KERNELS:.F90=_seq.o) $(OPS_GENERATED:.F90=_seq.o)

#=========================================================================================================================

%_seq.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) -c $< -o $@

#=========================================================================================================================

$(APP)_seq: Makefile .generated $(SEQ_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_seq"
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(SEQ_OBJ) -o $(APP)_seq $(APP_LIBS) -lops_for_seq $(F_HDF5_LIB_SEQ)

#=========================================================================================================================

clean:
	rm -f *.o MPI/*.o CUDA/*.o
	rm -f *.oo MPI/*.oo CUDA/*.oo
	rm -f *.optrpt MPI/*.optrpt CUDA/*.optrpt
	rm -f *.mod MPI/*.mod CUDA/*.mod
	rm -f *~ MPI/*~ CUDA/*~
	rm -f constants_list.txt
	rm -f $(APP)_seq

