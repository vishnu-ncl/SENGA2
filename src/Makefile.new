
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.common
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.mpi
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.cuda
USE_HDF5=1
include $(OPS_INSTALL_PATH)/../makefiles/Makefile.hdf5

OTHER_FILES = constants.F90 cuda_constant.F90 com_espect.F90 com_senga2.F90 \
    dfmstr.F90 ardums.F90 ardump.F90 buftxl.F90 \
    chkarr.F90 chkary.F90 erfunc.F90 espect.F90 espksq.F90 espovk.F90 \
    finish.F90 diffin.F90 hdf5io.F90 contin.F90 bcinit.F90 turbft.F90 \
    fftsym.F90 fftf3d.F90 integf.F90 fftixl.F90

OPS_FILES = senga2.F90 com_ops_senga2.F90 ops_data_init.F90 dfinit.F90 dfbydx.F90 d2fdx2.F90 \
    dfbydy.F90 dfbydz.F90 d2fdy2.F90 d2fdz2.F90 zeroxl.F90 zeroxr.F90 zeroyl.F90 zeroyr.F90 \
    zerozl.F90 zerozr.F90 d2fdxy.F90 d2fdxz.F90 d2fdyz.F90 rhscal.F90 rhsvel.F90 \
    lincom.F90 fincom.F90 adaptt.F90 bcdtxl.F90 bcdtxr.F90 bcdtyl.F90 bcdtyr.F90 \
    bcdtzl.F90 bcdtzr.F90 bcttxl.F90 bcttxr.F90 bcttyl.F90 bcttyr.F90 bcttzl.F90 \
    bcttzr.F90 bcutxl.F90 bcutxr.F90 bcutyl.F90 bcutyr.F90 bcutzl.F90 bcutzr.F90 \
    bcytxl.F90 bcytxr.F90 bcytyl.F90 bcytyr.F90 bcytzl.F90 bcytzr.F90 bounds.F90 \
    bountt.F90 boundt.F90 radcal.F90 radcin.F90 bctixl.F90 flamin.F90 chrate.F90 \
    indata.F90 dtinit.F90 chemin.F90 espini.F90 turbin.F90 temper.F90 pardom.F90 \
    tempin.F90 parfer.F90 output.F90 print_dats.F90 print_alldats.F90

ifeq ($(OPS_COMPILER),gnu)
APP_FLAGS = -mcmodel=medium -fallow-argument-mismatch
endif

ifeq ($(OPS_COMPILER),intel)
APP_FLAGS = -mcmodel=large -fp-model precise -fp-model source -no-fma -fimf-arch-consistency=true -fimf-precision=high
#APP_FLAGS = -mcmodel=large -fp-model precise -fp-model source -no-fma -nolib-inline
endif

ifeq ($(OPS_COMPILER),pgi)
APP_FLAGS = -Kieee -Mnofpapprox -mcmodel=medium -Ktrap=unf -Mnofprelaxed -m64 -pc 64
#-nofma
endif

APP_LIBS = fftlib/fftlib.a rndlib/rndlib.a parlib/parlib.a -lm

TARGETS = mpi cuda

APP = senga2
MAIN_SRC = senga2

##############################################################################
ifndef OPS_GENERATED_SUFFIX
OPS_GENERATED_SUFFIX=_ops
endif

ifeq ($(strip $(OPS_GENERATED)),)
OPS_GENERATED=$(join $(addsuffix $(OPS_GENERATED_SUFFIX), $(basename $(OPS_FILES))), $(suffix $(OPS_FILES)))
endif

OPS_FILES_GEN=$(OTHER_FILES) $(OPS_GENERATED)

.generated: $(HEADERS) $(OPS_FILES) $(OPS_INSTALL_PATH)/../ops_translator/fortran/*.py
	$(OPS_INSTALL_PATH)/../ops_translator/fortran/ops_fortran.py $(OPS_FILES)
	rm -f .generated
	touch .generated

# check what targets can not be built with current environment setting and give warnings
ifneq ($(strip $(TARGETS)),)

ifneq (,$(filter cuda mpi_cuda mpi_cuda_tiled,$(TARGETS)))
ifneq ($(OPS_COMPILER),pgi)
TARGETS:=$(filter-out cuda mpi_cuda mpi_cuda_tiled,$(TARGETS))
endif
endif

endif

ifndef TARGETS
TARGETS = seq openmp tiled mpi mpi_openmp mpi_tiled

ifeq ($(OPS_COMPILER),pgi)
	TARGETS += cuda mpi_cuda mpi_cuda_tiled
endif

endif

APP_TARGETS = $(addprefix $(APP)_, $(TARGETS))

all: $(APP_TARGETS)

SEQ_KERNELS = $(wildcard MPI/*.F90)
CUDA_KERNELS = $(wildcard CUDA/*.CUF)

MODULE_FILES = com_espect.F90 com_senga2.F90
OPS_MODULE_FILES = constants.F90 com_ops_senga2_ops.F90
OTHER_FILES := $(filter-out $(MODULE_FILES), $(OTHER_FILES))
OTHER_FILES := $(filter-out $(OPS_MODULE_FILES), $(OTHER_FILES))
OPS_GENERATED := $(filter-out $(MODULE_FILES), $(OPS_GENERATED))
OPS_GENERATED := $(filter-out $(OPS_MODULE_FILES), $(OPS_GENERATED))

#=========================================================================================================================

SEQ_OBJ = $(MODULE_FILES:.F90=_seq.o) $(OPS_MODULE_FILES:.F90=_seq.o) $(OTHER_FILES:.F90=_seq.o) $(SEQ_KERNELS:.F90=_seq.o) $(OPS_GENERATED:.F90=_seq.o)

OMP_OBJ = $(MODULE_FILES:.F90=_omp.o) $(OPS_MODULE_FILES:.F90=_omp.o) $(OTHER_FILES:.F90=_omp.o) $(SEQ_KERNELS:.F90=_omp.o) $(OPS_GENERATED:.F90=_omp.o)

TILED_OBJ = $(MODULE_FILES:.F90=_tiled.o) $(OPS_MODULE_FILES:.F90=_tiled.o) $(OTHER_FILES:.F90=_tiled.o) $(SEQ_KERNELS:.F90=_tiled.o) $(OPS_GENERATED:.F90=_tiled.o)

MPI_OBJ = $(MODULE_FILES:.F90=_mpi.o) $(OPS_MODULE_FILES:.F90=_mpi.o) $(OTHER_FILES:.F90=_mpi.o) $(SEQ_KERNELS:.F90=_mpi.o) $(OPS_GENERATED:.F90=_mpi.o)

MPI_TILED_OBJ = $(MODULE_FILES:.F90=_mpi_tiled.o) $(OPS_MODULE_FILES:.F90=_mpi_tiled.o) $(OTHER_FILES:.F90=_mpi_tiled.o) $(SEQ_KERNELS:.F90=_mpi_tiled.o) $(OPS_GENERATED:.F90=_mpi_tiled.o)

MPI_OMP_OBJ = $(MODULE_FILES:.F90=_mpi_omp.o) $(OPS_MODULE_FILES:.F90=_mpi_omp.o) $(OTHER_FILES:.F90=_mpi_omp.o) $(SEQ_KERNELS:.F90=_mpi_omp.o) $(OPS_GENERATED:.F90=_mpi_omp.o)

CUDA_OBJ = $(MODULE_FILES:.F90=_cuda.o) $(OPS_MODULE_FILES:.F90=_cuda.o) $(OTHER_FILES:.F90=_cuda.o) $(CUDA_KERNELS:.CUF=_cuda.o) $(OPS_GENERATED:.F90=_cuda.o)

MPI_CUDA_OBJ = $(MODULE_FILES:.F90=_mpi_cuda.o) $(OPS_MODULE_FILES:.F90=_mpi_cuda.o) $(OTHER_FILES:.F90=_mpi_cuda.o) $(CUDA_KERNELS:.CUF=_mpi_cuda.o) $(OPS_GENERATED:.F90=_mpi_cuda.o)

MPI_CUDA_TILED_OBJ = $(MODULE_FILES:.F90=_mpi_cuda_tiled.o) $(OPS_MODULE_FILES:.F90=_mpi_cuda_tiled.o) $(OTHER_FILES:.F90=_mpi_cuda_tiled.o) $(CUDA_KERNELS:.CUF=_mpi_cuda_tiled.o) $(OPS_GENERATED:.F90=_mpi_cuda_tiled.o)

#=========================================================================================================================

%_seq.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) -c $< -o $@

%_omp.o: %.F90
	$(MPIF90) $(FFLAGS) $(OMPFLAGS) $(APP_FLAGS) $(FMODS) -c $< -o $@

%_tiled.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) -DOPS_LAZY $(FMODS) -c $< -o $@

%_mpi.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) -DOPS_MPI $(FMODS) -c $< -o $@

%_mpi_tiled.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) -DOPS_MPI -DOPS_LAZY $(FMODS) -c $< -o $@

%_mpi_omp.o: %.F90
	$(MPIF90) $(FFLAGS) $(OMPFLAGS) $(APP_FLAGS) -DOPS_MPI $(FMODS) -c $< -o $@

%_cuda.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(CUDAFOR) $(FMODS_CUDA) -c $< -o $@

%_cuda.o: %.CUF
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(CUDAFOR) $(FMODS_CUDA) -c $< -o $@

%_mpi_cuda.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(CUDAFOR) -DOPS_MPI $(FMODS_CUDA) -c $< -o $@

%_mpi_cuda.o: %.CUF
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(CUDAFOR) -DOPS_MPI $(FMODS_CUDA) -c $< -o $@

%_mpi_cuda_tiled.o: %.F90
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(CUDAFOR) -DOPS_MPI -DOPS_LAZY $(FMODS_CUDA) -c $< -o $@

%_mpi_cuda_tiled.o: %.CUF
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(CUDAFOR) -DOPS_MPI -DOPS_LAZY $(FMODS_CUDA) -c $< -o $@

#=========================================================================================================================

$(APP)_seq: Makefile .generated $(SEQ_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_seq"
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(SEQ_OBJ) -o $(APP)_seq $(APP_LIBS) -lops_for_seq $(F_HDF5_LIB_SEQ)

#=========================================================================================================================

$(APP)_openmp: Makefile .generated $(OMP_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_openmp"
	@echo ""
	$(MPIF90) $(FFLAGS) $(OMPFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(OMP_OBJ) -o $(APP)_openmp $(APP_LIBS) -lops_for_seq $(F_HDF5_LIB_SEQ)

#=========================================================================================================================

$(APP)_tiled: Makefile .generated $(TILED_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_tiled"
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) -DOPS_LAZY $(TILED_OBJ) -o $(APP)_tiled $(APP_LIBS) -lops_for_seq $(F_HDF5_LIB_SEQ)

#=========================================================================================================================

$(APP)_mpi: Makefile .generated $(MPI_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_mpi"
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(PGIMPILINK) -DOPS_MPI $(MPI_OBJ) -o $(APP)_mpi $(APP_LIBS) -lops_for_mpi $(F_HDF5_LIB_MPI)

#=========================================================================================================================

$(APP)_mpi_tiled: Makefile .generated $(MPI_TILED_OBJ)
	@echo ""
	@echo ""
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(PGIMPILINK) -DOPS_MPI -DOPS_LAZY $(MPI_TILED_OBJ) -o $(APP)_mpi_tiled $(APP_LIBS) -lops_for_mpi $(F_HDF5_LIB_MPI)

#=========================================================================================================================

$(APP)_mpi_openmp: Makefile .generated $(MPI_OMP_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_mpi_openmp"
	@echo ""
	$(MPIF90) $(FFLAGS) $(OMPFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(PGIMPILINK) -DOPS_MPI $(MPI_OMP_OBJ) -o $(APP)_mpi_openmp $(APP_LIBS) -lops_for_mpi $(F_HDF5_LIB_MPI)

#=========================================================================================================================

$(APP)_cuda: Makefile .generated $(CUDA_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_cuda"
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS_CUDA) $(FLINK) $(CUDAFOR) $(CUDA_OBJ) -o $(APP)_cuda $(APP_LIBS) -lops_for_cuda $(F_HDF5_LIB_SEQ)

#=========================================================================================================================

$(APP)_mpi_cuda: Makefile .generated $(MPI_CUDA_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_mpi_cuda"
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS_CUDA) $(FLINK) $(PGIMPILINK) $(CUDAFOR) -DOPS_MPI $(MPI_CUDA_OBJ) -o $(APP)_mpi_cuda $(APP_LIBS) -lops_for_mpi_cuda $(F_HDF5_LIB_MPI)

#=========================================================================================================================

$(APP)_mpi_cuda_tiled: Makefile .generated $(MPI_CUDA_TILED_OBJ)
	@echo ""
	@echo ""
	@echo "Building ${APP}_mpi_cuda_tiled"
	@echo ""
	$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS_CUDA) $(FLINK) $(PGIMPILINK) $(CUDAFOR) -DOPS_MPI -DOPS_LAZY $(MPI_CUDA_OBJ) -o $(APP)_mpi_cuda_tiled $(APP_LIBS) -lops_for_mpi_cuda $(F_HDF5_LIB_MPI)

#=========================================================================================================================

clean:
	rm -f .generated
	rm -f *.o MPI/*.o CUDA/*.o
	rm -f *.oo MPI/*.oo CUDA/*.oo
	rm -f *.optrpt MPI/*.optrpt CUDA/*.optrpt
	rm -f *.mod MPI/*.mod CUDA/*.mod
	rm -f *~ MPI/*~ CUDA/*~
	rm -f constants_list.txt
	rm -f $(APP)_seq $(APP)_openmp $(APP)_tiled $(APP)_mpi $(APP)_mpi_openmp $(APP)_mpi_tiled $(APP)_cuda $(APP)_mpi_cuda $(APP)_mpi_cuda_tiled

