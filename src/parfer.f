      SUBROUTINE PARFER
 
C     *************************************************************************
C
C     PARFER
C     ======
C
C     AUTHOR
C     ------
C     R.S.CANT  --  CAMBRIDGE UNIVERSITY ENGINEERING DEPARTMENT
C
C     CHANGE RECORD
C     -------------
C     11-MAY-2003:  CREATED
C     04-JAN-2007:  RSC REVISE PARALLEL RECEIVES
C     26-OCT-2008:  RSC/TDD BUG FIX JSTAB
C
C     DESCRIPTION
C     -----------
C     CARRIES OUT TRANSFER OF PARALLEL DATA
C
C     *************************************************************************


C     GLOBAL DATA
C     ===========
C     -------------------------------------------------------------------------
      INCLUDE 'com_senga2.h'
C     -------------------------------------------------------------------------


C     LOCAL DATA
C     ==========
      INTEGER ISPEC,NCOUNT


C     BEGIN
C     =====

C     =========================================================================

C     X-WISE PARALLEL TRANSFER
C     ------------------------
      IF(PRODDX)THEN

C       ODD-NUMBERED PROCESSOR - RL SR RR SL
C       -----------------------------------------------------------------------

        IF(PRGOXL)THEN

C         RECEIVE FROM THE LEFT

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(DRHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(URHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(VRHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(WRHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(ERHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTALO,ISTOLO,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOXR)THEN

C         SEND TO THE RIGHT

          NCOUNT = NHALOX*NYNODE*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(URHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(VRHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(WRHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(ERHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTARI,ISTORI,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          ENDDO

C         ---------------------------------------------------------------------

C         RECEIVE FROM THE RIGHT

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(DRHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(URHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(VRHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(WRHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(ERHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTARO,ISTORO,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOXL)THEN

C         SEND TO THE LEFT

          NCOUNT = NHALOX*NYNODE*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(URHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(VRHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(WRHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(ERHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTALI,ISTOLI,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

      ELSE

C       EVEN-NUMBERED PROCESSOR - SR RL SL RR
C       -----------------------------------------------------------------------

        IF(PRGOXR)THEN

C         SEND TO THE RIGHT

          NCOUNT = NHALOX*NYNODE*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(URHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(VRHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(WRHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          CALL EXHALO(ERHS,PARRAY,ISTARI,ISTORI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTARI,ISTORI,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROP,ITGXSR)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOXL)THEN

C         RECEIVE FROM THE LEFT

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(DRHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(URHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(VRHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(WRHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
          CALL INHALO(ERHS,PARRAY,ISTALO,ISTOLO,JSTAL,JSTOL,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IXPROM,ITGXRL)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTALO,ISTOLO,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)

          ENDDO

C         ---------------------------------------------------------------------

C         SEND TO THE LEFT

          NCOUNT = NHALOX*NYNODE*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(URHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(VRHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(WRHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          CALL EXHALO(ERHS,PARRAY,ISTALI,ISTOLI,JSTAL,JSTOL,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTALI,ISTOLI,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IXPROM,ITGXSL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOXR)THEN

C         RECEIVE FROM THE RIGHT

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(DRHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(URHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(VRHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(WRHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
          CALL INHALO(ERHS,PARRAY,ISTARO,ISTORO,JSTAL,JSTOL,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IXPROP,ITGXRR)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTARO,ISTORO,
     +                  JSTAL,JSTOL,KSTAL,KSTOL)

          ENDDO

        ENDIF

      ENDIF

C     =========================================================================

C     Y-WISE PARALLEL TRANSFER
C     ------------------------
C     NOTE EXTENDED X-LIMITS FOR Y TRANSFERS

      IF(PRODDY)THEN

C       ODD-NUMBERED PROCESSOR - RL SR RR SL
C       -----------------------------------------------------------------------

        IF(PRGOYL)THEN

C         RECEIVE FROM THE LEFT

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTALO,JSTOLO,KSTAL,KSTOL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOYR)THEN

C         SEND TO THE RIGHT

          NCOUNT = NHALOY*NXNBIG*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTARI,JSTORI,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          ENDDO

C         ---------------------------------------------------------------------

C         RECEIVE FROM THE RIGHT

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTARO,JSTORO,KSTAL,KSTOL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOYL)THEN

C         SEND TO THE LEFT

          NCOUNT = NHALOY*NXNBIG*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTALI,JSTOLI,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

      ELSE

C       EVEN-NUMBERED PROCESSOR - SR RL SL RR
C       -----------------------------------------------------------------------

        IF(PRGOYR)THEN

C         SEND TO THE RIGHT

          NCOUNT = NHALOY*NXNBIG*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTARI,JSTORI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTARI,JSTORI,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROP,ITGYSR)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOYL)THEN

C         RECEIVE FROM THE LEFT

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTALO,JSTOLO,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IYPROM,ITGYRL)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTALO,JSTOLO,KSTAL,KSTOL)

          ENDDO

C         ---------------------------------------------------------------------

C         SEND TO THE LEFT

          NCOUNT = NHALOY*NXNBIG*NZNODE

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTALI,JSTOLI,KSTAL,KSTOL)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTALI,JSTOLI,KSTAL,KSTOL)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IYPROM,ITGYSL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOYR)THEN

C         RECEIVE FROM THE RIGHT

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTARO,JSTORO,KSTAL,KSTOL)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IYPROP,ITGYRR)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTARO,JSTORO,KSTAL,KSTOL)

          ENDDO

        ENDIF

      ENDIF

C     =========================================================================

C     Z-WISE PARALLEL TRANSFER
C     ------------------------
C     NOTE EXTENDED X- AND Y-LIMITS FOR Y AND Z TRANSFERS

      IF(PRODDZ)THEN

C       ODD-NUMBERED PROCESSOR - RL SR RR SL
C       -----------------------------------------------------------------------

        IF(PRGOZL)THEN

C         RECEIVE FROM THE LEFT

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTALO,KSTOLO)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOZR)THEN

C         SEND TO THE RIGHT

          NCOUNT = NHALOZ*NXNBIG*NYNBIG

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTARI,KSTORI)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          ENDDO

C         ---------------------------------------------------------------------

C         RECEIVE FROM THE RIGHT

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTARO,KSTORO)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOZL)THEN

C         SEND TO THE LEFT

          NCOUNT = NHALOZ*NXNBIG*NYNBIG

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTALI,KSTOLI)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

      ELSE

C       EVEN-NUMBERED PROCESSOR - SR RL SL RR
C       -----------------------------------------------------------------------

        IF(PRGOZR)THEN

C         SEND TO THE RIGHT

          NCOUNT = NHALOZ*NXNBIG*NYNBIG

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARI,KSTORI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTARI,KSTORI)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROP,ITGZSR)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOZL)THEN

C         RECEIVE FROM THE LEFT

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALO,KSTOLO)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IZPROM,ITGZRL)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTALO,KSTOLO)

          ENDDO

C         ---------------------------------------------------------------------

C         SEND TO THE LEFT

          NCOUNT = NHALOZ*NXNBIG*NYNBIG

          CALL EXHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          CALL EXHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

C         RSC/TDD BUG FIX JSTAB
          CALL EXHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          CALL EXHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          CALL EXHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTALI,KSTOLI)
          CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          DO ISPEC = 1,NSPEC

            CALL EXHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTALI,KSTOLI)
            CALL P_SEND(PARRAY,NPARAY,NCOUNT,IZPROM,ITGZSL)

          ENDDO

        ENDIF

C       -----------------------------------------------------------------------

        IF(PRGOZR)THEN

C         RECEIVE FROM THE RIGHT

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(DRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(URHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(VRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(WRHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
          CALL INHALO(ERHS,PARRAY,ISTAB,ISTOB,JSTAB,JSTOB,KSTARO,KSTORO)

          DO ISPEC = 1,NSPEC

            CALL P_RECV(PARRAY,NPARAY,IZPROP,ITGZRR)
            CALL INHALS(YRHS,ISPEC,PARRAY,ISTAB,ISTOB,
     +                  JSTAB,JSTOB,KSTARO,KSTORO)

          ENDDO

        ENDIF

      ENDIF

C     =========================================================================

C     SPECIAL CASE OF PERIODIC TRANSFER ON SINGLE PROCESSOR
C     -----------------------------------------------------

C     X-DIRECTION
C     ONLY NEED TO CHECK ONE END
      IF(NENDXL.EQ.NPERI)THEN

        CALL CXHALO(DRHS,JSTAL,JSTOL,KSTAL,KSTOL)
        CALL CXHALO(URHS,JSTAL,JSTOL,KSTAL,KSTOL)
        CALL CXHALO(VRHS,JSTAL,JSTOL,KSTAL,KSTOL)
        CALL CXHALO(WRHS,JSTAL,JSTOL,KSTAL,KSTOL)
        CALL CXHALO(ERHS,JSTAL,JSTOL,KSTAL,KSTOL)
        CALL CXHALS(YRHS,JSTAL,JSTOL,KSTAL,KSTOL)

      ENDIF

C     Y-DIRECTION
C     ONLY NEED TO CHECK ONE END
C     NOTE EXTENDED X-LIMITS FOR Y TRANSFERS
      IF(NENDYL.EQ.NPERI)THEN

        CALL CYHALO(DRHS,ISTAB,ISTOB,KSTAL,KSTOL)
        CALL CYHALO(URHS,ISTAB,ISTOB,KSTAL,KSTOL)
        CALL CYHALO(VRHS,ISTAB,ISTOB,KSTAL,KSTOL)
        CALL CYHALO(WRHS,ISTAB,ISTOB,KSTAL,KSTOL)
        CALL CYHALO(ERHS,ISTAB,ISTOB,KSTAL,KSTOL)
        CALL CYHALS(YRHS,ISTAB,ISTOB,KSTAL,KSTOL)

      ENDIF

C     Z-DIRECTION
C     ONLY NEED TO CHECK ONE END
C     NOTE EXTENDED X- AND Y-LIMITS FOR Z TRANSFERS
      IF(NENDZL.EQ.NPERI)THEN

        CALL CZHALO(DRHS,ISTAB,ISTOB,JSTAB,JSTOB)
        CALL CZHALO(URHS,ISTAB,ISTOB,JSTAB,JSTOB)
        CALL CZHALO(VRHS,ISTAB,ISTOB,JSTAB,JSTOB)
        CALL CZHALO(WRHS,ISTAB,ISTOB,JSTAB,JSTOB)
        CALL CZHALO(ERHS,ISTAB,ISTOB,JSTAB,JSTOB)
        CALL CZHALS(YRHS,ISTAB,ISTOB,JSTAB,JSTOB)

      ENDIF

C     =========================================================================


      RETURN
      END
